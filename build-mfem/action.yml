# Copyright (c) 2010-2021, Lawrence Livermore National Security, LLC. Produced
# at the Lawrence Livermore National Laboratory. All Rights reserved. See files
# LICENSE and NOTICE for details. LLNL-CODE-806117.
#
# This file is part of the MFEM library. For more information and source code
# availability visit https://mfem.org.
#
# MFEM is free software; you can redistribute it and/or modify it under the
# terms of the BSD-3 license. We welcome feedback and contributions, see file
# CONTRIBUTING.md for details.

name: build-mfem

inputs:
  os:
    description: 'os'
    required: true
  target:
    description: 'Type of target (debug, optim)'
    required: false
    default: optim
  mpi:
    description: 'MPI status'
    required: false
    default: parallel
  codecov:
    description: 'Codecov status'
    required: false
    default: NO
  hypre-dir:
    description: 'hypre install location working dir'
    required: true
  metis-dir:
    description: 'metis install location working dir'
    required: true
  mfem-repo:
    description: 'Repo url for MFEM'
    required: false
    default: 'https://github.com/mfem/mfem.git'
  mfem-branch:
    description: 'Branch to checkout'
    required: false
    default: ''
  mfem-dir:
    description: 'mfem repo checkout location in working dir'
    required: true
  build-system:
    description: 'identify the build system to use (make,cmake)'
    required: false
    default: make

runs:
  using: "composite"
  steps:
    - name: configure mfem
      run: |
        echo "--- Download source code ---"
        if [[ -n "${{ inputs.mfem-branch }}" ]]; then
          if [[ -d ${{ inputs.mfem-dir }} ]]; then
            echo "Error: Unknown use case"
            echo " Trying to change MFEM branch while MFEM is already present."
            echo " The use case supported are:"
            echo "  - MFEM CI: Use MFEM source checked out by Github."
            echo "  - MiniApp CI: Clone MFEM using a specific branch."
            exit 1;
          fi
          git clone --single-branch --branch ${{ inputs.mfem-branch }} --depth 1 ${{ inputs.mfem-repo }} ${{ inputs.mfem-dir }};
        fi
        echo "--- Prepare Configuration ---"
        MPI="NO"
        if [[ ${{ inputs.mpi }} == 'parallel' ]]; then
          MPI="YES"
          echo "Hypre symlink:"
          ln -s -f ${{ inputs.hypre-dir }} hypre;
          echo "Metis symlink:"
          ln -s -f ${{ inputs.metis-dir }} metis-4.0;
        fi
        CPPFLAGS="";
        DEBUG="NO";
        if [[ ${{ inputs.target }} == 'debug' ]]; then
          DEBUG="YES";
          if [[ ${{ inputs.os }} == 'ubuntu-18.04' ]]; then
            CPPFLAGS+=" -pedantic -Wall -Werror";
          fi
        fi
        if [[ ${{ inputs.codecov }} == 'YES' ]]; then
          CPPFLAGS+=" --coverage -fPIC -g";
        fi
        echo "--- Configure mfem ---"
        cd ${{ inputs.mfem-dir }};
        if [[ ${{ inputs.build-system }} == 'cmake' ]]; then
            mkdir build && cd build;
            cmake .. -DMFEM_USE_MPI=${MPI} -DMFEM_MPI_NP=2 -DHYPRE_DIR=../../hypre/src/hypre
        else
            make config MFEM_USE_MPI=${MPI} MFEM_MPI_NP=2 MFEM_DEBUG=${DEBUG} CPPFLAGS="${CPPFLAGS}";
        fi
      shell: bash

    - name: build mfem
      run: |
        echo "--- Build mfem ---"
        cd ${{ inputs.mfem-dir }}
        if [[ ${{ inputs.build-system }} == "cmake" ]]; then
            cd build
            make -j3 mfem examples
            cd tests/unit
            make -j3
        else
            make all -j3
        fi
      shell: bash

